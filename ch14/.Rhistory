x <- c(88,NA,12,168,13)
x
mean(x)
mean(x,na.rm=T)
x <- c(88,NULL,12,168,13)
mean(x)
x <- c(5,NA,12)
na
NA
mode(x[1])
mode(x[2])
y <- c("abc", "def", NA)
mode(y[2])
mode(y[3])
z <- c(NA, NA, NA)
z
mode(c[1])
mode(z[1])
z <- NULL
z
for (i in 1:10) if (i %% 2 == 0) z <- c(z,i)
z
z <- c(5,2,-3,8)
w <- z[z*z > 8]
w
z
z*z > 8
z*z
z
z[c(TRUE, FALSE)]
z[c(TRUE, FALSE, TRUE, TRUE)]
j <- z*z > 8
j
y[j]
z[y]
z
z[j]
y
x
x[x > 3] <- 0
x
x <- c(1,3,8,2,20)
x
x[x > 3]
x[x > 3] <- 0
x
x <- c(6,1:3,NA,12)
x
x[x > 5]
subset(x, x > 5)
which (z * z > 8)
x <- 1:10
x
y <- ifelse(x %% 2 == 0,5,12)
y
x <- c(5,2,9,12)
ifelse(x > 6, 2*x, 3*x)
findud <- function(v) {
  vud <- v[-1] - v[-length(v)]
  return(ifelse(vud > 0,1,-1))
}
udcorr <- function(x,y) {
  ud <- lapply(list(x,y),findud)
  return(mean(ud[[1]] == ud[[2]]))
}
x
y
udcorr(x,y)
X
x
x[1]
x[-1]
x[-2]
x[-4]
x[-5]
x
y
list(x,y)
q()
getwd()
setwd('d:/work/The Art of R Programming/ch14/')
getwd()
library(compiler)
f <- function() for (i in 1:length(x)) z[i] <<- x[i] + y[i]
cf <- cmpfun(f)
system.time(cf())
q()
